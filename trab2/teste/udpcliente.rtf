{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red65\green182\blue69;\red30\green32\blue40;\red198\green124\blue72;
\red193\green37\blue48;\red120\green109\blue196;\red176\green169\blue149;\red255\green255\blue255;\red0\green160\blue190;
\red131\green192\blue87;}
{\*\expandedcolortbl;;\csgenericrgb\c25500\c71400\c27000;\csgenericrgb\c11800\c12500\c15700;\csgenericrgb\c77800\c48800\c28400;
\csgenericrgb\c75643\c14529\c18740;\csgenericrgb\c46900\c42600\c77000;\csgenericrgb\c69035\c66416\c58554;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c62600\c74600;
\csgenericrgb\c51200\c75400\c34300;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 /*
\f1\fs24 \cf0 \

\f0\fs22 \cf2  * udpclient.c - A simple UDP client
\f1\fs24 \cf0 \

\f0\fs22 \cf2  * usage: udpclient <host> <port>
\f1\fs24 \cf0 \

\f0\fs22 \cf2  */
\f1\fs24 \cf0 \

\f0\fs22 \cf4 #include \cf5 <stdio.h>
\f1\fs24 \cf0 \

\f0\fs22 \cf4 #include \cf5 <stdlib.h>
\f1\fs24 \cf0 \

\f0\fs22 \cf4 #include \cf5 <string.h>
\f1\fs24 \cf0 \

\f0\fs22 \cf4 #include \cf5 <unistd.h>
\f1\fs24 \cf0 \

\f0\fs22 \cf4 #include \cf5 <sys/types.h>
\f1\fs24 \cf0 \

\f0\fs22 \cf4 #include \cf5 <sys/socket.h>
\f1\fs24 \cf0 \

\f0\fs22 \cf4 #include \cf5 <netinet/in.h>
\f1\fs24 \cf0 \

\f0\fs22 \cf4 #include \cf5 <netdb.h>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf4 #define BUFSIZE \cf6 1024
\f1\fs24 \cf0 \
\

\f0\fs22 \cf2 /*
\f1\fs24 \cf0 \

\f0\fs22 \cf2  * error - wrapper for perror
\f1\fs24 \cf0 \

\f0\fs22 \cf2  */
\f1\fs24 \cf0 \

\f0\fs22 \cf7 void\cf8  error(\cf7 char\cf8  *msg) \{
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf9 perror\cf8 (msg);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf9 exit\cf8 (\cf6 0\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf7 int\cf8  main(\cf7 int\cf8  argc, \cf7 char\cf8  **argv) \{
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 int\cf8  sockfd, portno, n;
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 int\cf8  serverlen;
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 struct\cf8  \cf9 sockaddr_in\cf8  serveraddr;
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 struct\cf8  \cf9 hostent\cf8  *server;
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 char\cf8  *hostname;
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 char\cf8  buf[\cf4 BUFSIZE\cf8 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf8     
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf2 /* check command line arguments */
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 if\cf8  (argc != \cf6 3\cf8 ) \{
\f1\fs24 \cf0 \

\f0\fs22 \cf8         \cf9 fprintf\cf8 (\cf4 stderr\cf8 ,\cf5 "usage: %s <hostname> <port>\\n"\cf8 , argv[\cf6 0\cf8 ]);
\f1\fs24 \cf0 \

\f0\fs22 \cf8         \cf9 exit\cf8 (\cf6 0\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf8     hostname = argv[\cf6 1\cf8 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf8     portno = \cf9 atoi\cf8 (argv[\cf6 2\cf8 ]);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf2 /* socket: create the socket */
\f1\fs24 \cf0 \

\f0\fs22 \cf8     sockfd = \cf9 socket\cf8 (\cf4 AF_INET\cf8 , \cf4 SOCK_DGRAM\cf8 , \cf6 0\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 if\cf8  (sockfd < \cf6 0\cf8 )
\f1\fs24 \cf0 \

\f0\fs22 \cf8         \cf10 error\cf8 (\cf5 "ERROR opening socket"\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf2 /* gethostbyname: get the server's DNS entry */
\f1\fs24 \cf0 \

\f0\fs22 \cf8     server = \cf9 gethostbyname\cf8 (hostname);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 if\cf8  (server == \cf7 NULL\cf8 ) \{
\f1\fs24 \cf0 \

\f0\fs22 \cf8         \cf9 fprintf\cf8 (\cf4 stderr\cf8 ,\cf5 "ERROR, no such host as %s\\n"\cf8 , hostname);
\f1\fs24 \cf0 \

\f0\fs22 \cf8         \cf9 exit\cf8 (\cf6 0\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf8     
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf2 /* build the server's Internet address */
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf4 bzero\cf8 ((\cf7 char\cf8  *) &serveraddr, \cf7 sizeof\cf8 (serveraddr));
\f1\fs24 \cf0 \

\f0\fs22 \cf8     serveraddr.\cf9 sin_family\cf8  = \cf4 AF_INET\cf8 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf4 bcopy\cf8 ((\cf7 char\cf8  *)server->\cf4 h_addr\cf8 ,
\f1\fs24 \cf0 \

\f0\fs22 \cf8           (\cf7 char\cf8  *)&serveraddr.\cf9 sin_addr\cf8 .\cf9 s_addr\cf8 , server->\cf9 h_length\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     serveraddr.\cf9 sin_port\cf8  = \cf4 htons\cf8 (portno);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf9 FILE\cf8  *fp;
\f1\fs24 \cf0 \

\f0\fs22 \cf8     fp = \cf9 fopen\cf8 (\cf5 "msg.txt"\cf8  , \cf5 "r"\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 if\cf8 (fp == \cf7 NULL\cf8 ) \{
\f1\fs24 \cf0 \

\f0\fs22 \cf8         \cf9 perror\cf8 (\cf5 "Error opening file"\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8         \cf7 return\cf8 (-\cf6 1\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf8     
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf2 /* get a message from the user */
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf4 bzero\cf8 (buf, \cf4 BUFSIZE\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf9 printf\cf8 (\cf5 "Please enter msg: "\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf9 fgets\cf8 (buf, \cf4 BUFSIZE\cf8 , fp);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf2 /* send the message to the server */
\f1\fs24 \cf0 \

\f0\fs22 \cf8     serverlen = \cf7 sizeof\cf8 (serveraddr);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     n = \cf9 sendto\cf8 (sockfd, buf, \cf9 strlen\cf8 (buf), \cf6 0\cf8 , \ulth &serveraddr\ulnone , serverlen);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 if\cf8  (n < \cf6 0\cf8 )
\f1\fs24 \cf0 \

\f0\fs22 \cf8         \cf10 error\cf8 (\cf5 "ERROR in sendto"\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf2 /* print the server's reply */
\f1\fs24 \cf0 \

\f0\fs22 \cf8     n = \cf9 recvfrom\cf8 (sockfd, buf, \cf9 strlen\cf8 (buf), \cf6 0\cf8 , \ulth &serveraddr\ulnone , &serverlen);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 if\cf8  (n < \cf6 0\cf8 )
\f1\fs24 \cf0 \

\f0\fs22 \cf8         \cf10 error\cf8 (\cf5 "ERROR in recvfrom"\cf8 );
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf9 printf\cf8 (\cf5 "Echo from server: %s"\cf8 , buf);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf9 fclose\cf8 (fp);
\f1\fs24 \cf0 \

\f0\fs22 \cf8     \cf7 return\cf8  \cf6 0\cf8 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf8 \}
\f1\fs24 \cf0 \
}